{"version":3,"file":"direct-link.js","mappings":"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;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAC4D;;AAE3D;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,QAAQA,CAAA,EAAG;EACnB,OAAO;IAEN;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACEC,SAAS,EAAE,KAAK;IAEhB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACEC,KAAK,EAAE,KAAK;IAEZ;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACEC,KAAK,EAAE,EAAE;IAET;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACEC,QAAQ,EAAE,CAAC;IAEX;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACEC,QAAQ,EAAE,EAAE;IAEZ;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACEC,qBAAqB,EAAE,KAAK;IAE5B;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACEC,gBAAgB,EAAE,KAAK;IAEvB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACGC,qBAAqB,EAAE,KAAK;IAE7B;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACEC,kBAAkB,EAAE,KAAK;IAEzB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACE,MAAMC,IAAIA,CAAA,EAAG;MACZ;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACC,MAAM,CAACC,IAAI,CAACC,KAAK,CAAE;QAC/CvC,IAAI,EAAE,6DAA6D;QACnEwC,WAAW,EAAE;MACd,CAAE,CAAC;;MAEH;MACA,IAAI,CAACb,KAAK,GAAGQ,QAAQ,CAACR,KAAK,CAACX,GAAG,CAAEyB,IAAI,IAAI;QACxCA,IAA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","sources":["webpack://AFFWP.portal/./src/helpers/helpers.js","webpack://AFFWP.portal/./src/url-helpers/url-helpers.js","webpack://AFFWP.portal/external window [\"wp\",\"url\"]","webpack://AFFWP.portal/webpack/bootstrap","webpack://AFFWP.portal/webpack/runtime/compat get default export","webpack://AFFWP.portal/webpack/runtime/define property getters","webpack://AFFWP.portal/webpack/runtime/hasOwnProperty shorthand","webpack://AFFWP.portal/webpack/runtime/make namespace object","webpack://AFFWP.portal/./src/integrations/direct-link/index.js"],"sourcesContent":["/**\n * Helper Functions.\n *\n * Generic helper functions specific to AffilaiteWP Affiliate Portal.\n *\n * @author Alex Standiford\n * @since 1.0.0\n */\n\n/**\n * Pause.\n *\n * Delays script execution for the specified amount of time.\n *\n * @since 1.0.0\n * @param length Amount of time to delay, in milliseconds.\n *\n * @returns {Promise} Resolved promise after specified length\n */\nfunction pause( length ) {\n\treturn new Promise( resolve => setTimeout( resolve, length ) )\n}\n\n/**\n * Adds a trailing slash to the input value, if it does not already have one.\n *\n * @since 1.0.0\n * @param input {string} The value to append a slash.\n *\n * @returns {string} The appended string.\n */\nfunction trailingslashit( input ) {\n\tif( typeof input !== 'string' || input.endsWith( '/' ) ) {\n\t\treturn input;\n\t}\n\n\treturn `${input}/`;\n}\n\nexport { pause, trailingslashit}","/**\n * URL Helper Functions.\n *\n * Helper functions that extend the @wordpress/url library.\n *\n * @author Alex Standiford\n * @since 1.0.0\n */\n\n/**\n * WordPress dependencies\n */\nimport {\n\tgetAuthority,\n\tgetFragment,\n\tgetPath,\n\tgetProtocol,\n\tgetQueryString,\n\taddQueryArgs\n} from \"@wordpress/url\";\n\n/**\n * Internal dependencies\n */\nimport {trailingslashit} from '@affiliatewp-portal/helpers';\n\nconst paginationRegex = /\\/([^\\/a-zA-Z-_]+)\\/?$/;\n\n/**\n * Append URL.\n *\n * Appends the provided path to the end of the provided URL's path.\n *\n * @since      1.0.0\n * @access     protected\n * @param {string} url The URL to append to.\n * @param {string} append The string to append to the URL.\n *\n * @return {string} URL with path appended.\n */\nfunction appendUrl( url, append ) {\n\t// Remove the slash at the beginning of append, if it was mistakenly added.\n\tif( append.startsWith( '/' ) ) {\n\t\tappend = append.substr( 1 );\n\t}\n\n\t// Define the parts of the URL.\n\treturn constructUrl( url, [\n\t\t'protocol',\n\t\t'authority',\n\t\t'path',\n\t\ttrailingslashit( append ),\n\t\t'querystring',\n\t\t'fragment',\n\t] );\n\n}\n\n/**\n * Construct URL.\n *\n * Constructs a URL from a URL and specified parts.\n *\n * @since      1.0.0\n * @access     protected\n * @param {string} url The url to construct parts from.\n * @param {array} parts List of parts to construct, in the order they should be constructed.\n *                This can be any of the following: 'protocol', 'authority', 'path', 'querystring', 'fragment'\n *                If an arbitrary string is passed, that string will be inserted in the URL.\n *\n * @return {string} constructed URL\n */\nfunction constructUrl( url, parts ) {\n\tconst urlObject = {\n\n\t\t/**\n\t\t * Get Protocol.\n\t\t * Retrieves the protocol from the URL.\n\t\t *\n\t\t * @since 1.0.0\n\t\t * @returns {string}\n\t\t */\n\t\tgetProtocol: () => {\n\t\t\treturn `${getProtocol( url )}//`;\n\t\t},\n\n\t\t/**\n\t\t * Get Authority.\n\t\t * Retrieves the authority from the URL.\n\t\t *\n\t\t * @since 1.0.0\n\t\t * @returns {string}\n\t\t */\n\t\tgetAuthority: () => {\n\t\t\treturn trailingslashit( getAuthority( url ) )\n\t\t},\n\n\t\t/**\n\t\t * Get Path.\n\t\t * Retrieves the path from the URL.\n\t\t *\n\t\t * @since 1.0.0\n\t\t * @returns {string}\n\t\t */\n\t\tgetPath: () => {\n\t\t\treturn trailingslashit( getPath( url ) )\n\t\t},\n\n\t\t/**\n\t\t * Get Query String.\n\t\t * Retrieves the querytstring from the URL.\n\t\t *\n\t\t * @since 1.0.0\n\t\t * @returns {string}\n\t\t */\n\t\tgetQuerystring: () => {\n\t\t\tconst queryString = getQueryString( url );\n\t\t\treturn queryString ? `?${getQueryString( url )}` : '';\n\t\t},\n\n\t\t/**\n\t\t * Get Fragment.\n\t\t * Retrieves the fragment from the URL.\n\t\t *\n\t\t * @since 1.0.0\n\t\t * @returns {string}\n\t\t */\n\t\tgetFragment: () => {\n\t\t\treturn getFragment( url )\n\t\t},\n\t}\n\n\treturn parts.reduce( ( acc, part ) => {\n\n\t\tconst isValidUrlPart = ['protocol', 'authority', 'path', 'querystring', 'fragment'].includes( part.toLowerCase() );\n\n\t\tif( !isValidUrlPart && typeof part === 'string' ) {\n\t\t\treturn acc + part;\n\t\t}else if( !isValidUrlPart ) {\n\t\t\treturn acc;\n\t\t}\n\t\tconst callback = urlObject['get' + part.charAt( 0 ).toUpperCase() + part.slice( 1 ).toLowerCase()];\n\t\tconst urlPart = callback();\n\n\t\tif( undefined === urlPart ) {\n\t\t\treturn acc;\n\t\t}\n\n\t\treturn acc + urlPart;\n\t}, '' );\n}\n\n/**\n * Authorities Match.\n *\n * Returns true if the provided url matches the specified base authority.\n *\n * @since      1.0.0\n * @access     protected\n * @param url {string} The URL to check.\n * @param baseAuthority {string} The base authority to check against.\n *\n * @return {boolean} true if authorities match, otherwise false.\n */\nfunction authoritiesMatch( url, baseAuthority ) {\n\tconst inputAuthority = getAuthority( url );\n\n\t// Return true if the authorities match.\n\tif( inputAuthority === baseAuthority ) {\n\t\treturn true;\n\t}\n\n\t// Return true if inputAuthority is a subdomain of baseAuthority.\n\tconst regex = new RegExp(\"\\\\w\\\\.\" + baseAuthority + \"$\");\n\treturn regex.test( inputAuthority );\n}\n\n/**\n * Has valid protocol.\n *\n * Returns true if the provided URL has a valid URL protocol for a typical web request.\n *\n * @since      1.0.0\n * @access     protected\n * @param url {string} The URL to check.\n *\n * @returns {boolean} true if valid, otherwise false.\n */\nfunction hasValidProtocol( url ) {\n\tconst protocol = getProtocol( url );\n\n\treturn ['https:', 'http:'].includes( protocol );\n}\n\n/**\n * Get Page.\n *\n * Fetches the page from the provided URL\n *\n * @since     1.0.0\n * @access    protected\n * @param url {string} The URL from which the page number should be retrieved.\n *\n * @returns {string} The page number\n */\nfunction getPage( url ) {\n\tconst path = getPath( url );\n\n\tconst search = path.match( paginationRegex );\n\n\t// If no page was found, we are on page 1.\n\tif( null === search ) {\n\t\treturn '1';\n\t}\n\n\t// Otherwise, get the page number.\n\treturn search[1];\n}\n\n/**\n * Paginate URL.\n *\n * Appends the URL with the provided query args, and formats for pretty pagination.\n *\n * @since     1.0.0\n * @access    protected\n * @param url {string} The URL to paginate.\n * @param args {object} List of query param values keyed by their key.\n *                      If a page is passed, it will be formatted for pagination.\n *\n * @returns {string} The page number\n */\nfunction paginateUrl( url, args ) {\n\tgetPage( url );\n\tconst path = trailingslashit( getPath( url ) ).replace( paginationRegex, '/' );\n\n\t// Strip out any existing pagination from the path.\n\tconst urlParts = ['protocol', 'authority', path];\n\n\t// Append the page number, if we have a page to append.\n\tif( args.page ) {\n\t\tif( args.page > 1 ) {\n\t\t\turlParts.push( args.page + '/' );\n\t\t}\n\t\tdelete args.page\n\t}\n\n\t// Construct the URL using the provided URL parts.\n\tconst result = constructUrl( url, urlParts );\n\n\t// Append query args to the resulting URL.\n\treturn addQueryArgs( result, args );\n}\n\n/**\n * Validates a given URL.\n *\n * Simple validation of an url.\n *\n * @since     1.0.0\n * @access    protected\n * @param url {string} The URL to validate.\n *\n * @returns {bool}\n */\nfunction validateUrl( url ) {\n\treturn /\\.\\w\\w.*/.test( url );\n}\n\n/**\n * Given a path, returns a normalized path where equal query parameter values\n * will be treated as identical, regardless of order they appear in the original\n * text.\n *\n * @param {string} path Original path.\n *\n * @return {string} Normalized path.\n */\nfunction getStablePath( path ) {\n\tconst splitted = path.split( '?' );\n\tconst query = splitted[ 1 ];\n\tconst base = splitted[ 0 ];\n\tif ( ! query ) {\n\t\treturn base;\n\t}\n\n\t// 'b=1&c=2&a=5'\n\treturn (\n\t\tbase +\n\t\t'?' +\n\t\tquery\n\t\t\t// [ 'b=1', 'c=2', 'a=5' ]\n\t\t\t.split( '&' )\n\t\t\t// [ [ 'b, '1' ], [ 'c', '2' ], [ 'a', '5' ] ]\n\t\t\t.map( ( entry ) => entry.split( '=' ) )\n\t\t\t// [ [ 'a', '5' ], [ 'b, '1' ], [ 'c', '2' ] ]\n\t\t\t.sort( ( a, b ) => a[ 0 ].localeCompare( b[ 0 ] ) )\n\t\t\t// [ 'a=5', 'b=1', 'c=2' ]\n\t\t\t.map( ( pair ) => pair.join( '=' ) )\n\t\t\t// 'a=5&b=1&c=2'\n\t\t\t.join( '&' )\n\t);\n}\n\nexport {paginateUrl, getPage, appendUrl, authoritiesMatch, hasValidProtocol, constructUrl, validateUrl, getStablePath};\n","module.exports = window[\"wp\"][\"url\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/**\n * Direct Link Tracking view Handler.\n *\n * Works with the Direct Link Tracking screen in the affiliate portal to handle link operations.\n *\n * @since 1.0.0\n *\n */\n\n/**\n * Internal dependencies\n */\nimport {validateUrl} from '@affiliatewp-portal/url-helpers';\n\n /**\n * Direct Link Tracking view screen AlpineJS handler.\n *\n * Works with the Direct Link Tracking screen in the affiliate portal to handle link operations.\n *\n * @since 1.0.0\n * @access public\n *\n * @returns object The AlpineJS object.\n */\nfunction settings() {\n\treturn {\n\n\t\t/**\n\t\t * Is Loading.\n\t\t *\n\t\t * Determines if the app is loading.\n\t\t *\n\t\t * @since  1.0.0\n\t\t * @access public\n\t\t *\n\t\t * @type boolean\n\t\t */\n\t\tisLoading: false,\n\n\t\t/**\n\t\t * Is form valid.\n\t\t *\n\t\t * Determines if the form is valid.\n\t\t *\n\t\t * @since  1.0.0\n\t\t * @access public\n\t\t *\n\t\t * @type boolean\n\t\t */\n\t\tvalid: false,\n\n\t\t/**\n\t\t * Current links Items.\n\t\t *\n\t\t * Array containing the current affiliate direct links.\n\t\t *\n\t\t * @since  1.0.0\n\t\t * @access public\n\t\t *\n\t\t * @type array\n\t\t */\n\t\tlinks: [],\n\n\t\t/**\n\t\t * Max number of links allowed.\n\t\t *\n\t\t * The max number of links an affiliate can register.\n\t\t *\n\t\t * @since  1.0.0\n\t\t * @access public\n\t\t *\n\t\t * @type int\n\t\t */\n\t\tmaxLinks: 0,\n\n\t\t/**\n\t\t * Rejected domains.\n\t\t *\n\t\t * HTML string with list of rejected domains to show to the affiliate.\n\t\t *\n\t\t * @since  1.0.4\n\t\t * @access public\n\t\t *\n\t\t * @type string\n\t\t */\n\t\trejected: '',\n\n\t\t/**\n\t\t * Showing success message.\n\t\t *\n\t\t * Shows success message when the form is submitted\n\t\t *\n\t\t * @since  1.0.0\n\t\t * @access public\n\t\t *\n\t\t * @type boolean\n\t\t */\n\t\tshowingSuccessMessage: false,\n\n\t\t/**\n\t\t * Shows update notice.\n\t\t *\n\t\t * Shows notice to the user when links were updated.\n\t\t *\n\t\t * @since  1.0.0\n\t\t * @access public\n\t\t *\n\t\t * @type boolean\n\t\t */\n\t\tshowUpdateNotice: false,\n\n\t\t/**\n\t\t * Shows invalid submission.\n\t\t *\n\t\t * Shows to the user when invalid links were submitted.\n\t\t *\n\t\t * @since  1.0.0\n\t\t * @access public\n\t\t *\n\t\t * @type boolean\n\t\t */\n\t\t showInvalidSubmission: false,\n\n\t\t/**\n\t\t * Is dismissing notice.\n\t\t *\n\t\t * Determines if the app is dismissing the notice.\n\t\t *\n\t\t * @since  1.0.0\n\t\t * @access public\n\t\t *\n\t\t * @type boolean\n\t\t */\n\t\tisDismissingNotice: false,\n\n\t\t/**\n\t\t * Init.\n\t\t *\n\t\t * Initializes the AlpineJS instance.\n\t\t *\n\t\t * @since      1.0.0\n\t\t * @access     public\n\t\t *\n\t\t * @return void\n\t\t */\n\t\tasync init() {\n\t\t\t// Fetch list of direct links.\n\t\t\tconst response = await AFFWP.portal.core.fetch( {\n\t\t\t\tpath: 'affwp/v2/portal/integrations/direct-link-tracking/get-links',\n\t\t\t\tcacheResult: false\n\t\t\t} );\n\n\t\t\t// Add some extra flags to each link.\n\t\t\tthis.links = response.links.map( link => {\n\t\t\t\tlink.timer = false;\n\t\t\t\tlink.isValidatingUrl = false;\n\t\t\t\tlink.isRemoving = false;\n\t\t\t\treturn link;\n\t\t\t} );\n\t\t\tthis.rejected = response.rejected.join('<br>');\n\n\t\t\t// Add one default domain if no links saved.\n\t\t\tif( this.links.length === 0 ) {\n\t\t\t\tthis.addDomain();\n\t\t\t}\n\n\t\t\tthis.checkValid();\n\n\t\t\tthis.isLoading = false;\n\t\t},\n\n\t\t/**\n\t\t * Adds a new direct link domain.\n\t\t *\n\t\t * Adds a new domain to the list of links.\n\t\t *\n\t\t * @since  1.0.0\n\t\t * @access public\n\t\t *\n\t\t * @returns void\n\t\t */\n\t\taddDomain() {\n\t\t\tif( this.links.length + 1 <= this.maxLinks ) {\n\t\t\t\tthis.links.push( {\n\t\t\t\t\turl_id: '',\n\t\t\t\t\turl: '',\n\t\t\t\t\terrors: {}\n\t\t\t\t} );\n\n\t\t\t\t// New link is empty so the form should be invalid.\n\t\t\t\tthis.valid = false;\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Get Link Object.\n\t\t *\n\t\t * Attempts to retrieve the Link object from the list of links.\n\t\t *\n\t\t * @since      1.0.0\n\t\t * @access     public\n\t\t * \n\t\t * @param index {int} index of link on links array.\n\t\t * @return {linkObject|boolean} linkObject instance, if it is set. Otherwise false.\n\t\t */\n\t\tgetLinkObject( index ) {\n\n\t\t\t// Bail if the index is not set.\n\t\t\tif( undefined === this.links[index] ) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn this.links[index];\n\t\t},\n\n\t\t/**\n\t\t * Get Link Param.\n\t\t *\n\t\t * Attempts to retrieve the param from the specified link object.\n\t\t *\n\t\t * @since      1.0.0\n\t\t * @access     public\n\t\t * \n\t\t * @param index {index} Index of link on links array.\n\t\t * @param param {string} Param Link object param to retrieve.\n\t\t *\n\t\t * @return {*} The param value.\n\t\t */\n\t\tgetLinkParam( index, param ) {\n\t\t\tconst object = this.getLinkObject( index );\n\n\t\t\t/*\n\t\t\t* If the Link index doesn't exist, or the param cannot be found, bail with an empty string\n\t\t\t* Empty string is used here because this method is frequently called in the DOM.\n\t\t\t* Returning false would cause the DOM elements to display \"false\" in various inputs.\n\t\t\t */\n\t\t\tif( false === object || undefined === object[param] ) {\n\t\t\t\treturn '';\n\t\t\t}\n\n\t\t\treturn object[param];\n\t\t},\n\n\t\t/**\n\t\t * Removes direct link domain.\n\t\t *\n\t\t * Removes a link from the list of ids by url id.\n\t\t *\n\t\t * @since  1.0.0\n\t\t * @access public\n\t\t *\n\t\t * @param linkIndex {int} Index of link on links array.\n\t\t * @returns void\n\t\t */\n\t\tasync removeLink( linkIndex ) {\n\t\t\tconst linkToDelete = this.getLinkObject( linkIndex );\n\t\t\tconst urlId = linkToDelete.url_id;\n\t\t\tif( urlId ) {\n\t\t\t\tlinkToDelete.isRemoving = true;\n\t\t\t\tawait AFFWP.portal.core.fetch( {\n\t\t\t\t\tpath: `affwp/v2/portal/integrations/direct-link-tracking/links/${urlId}`,\n\t\t\t\t\tmethod: 'DELETE',\n\t\t\t\t\tdata: {},\n\t\t\t\t} );\n\t\t\t}\n\t\t\tthis.links.splice( linkIndex, 1 );\n\t\t},\n\n\t\t/**\n\t\t * Submit links.\n\t\t *\n\t\t * Calls the REST API to save the links and get the new list of links and notices.\n\t\t *\n\t\t * @since  1.0.0\n\t\t * @access public\n\t\t *\n\t\t * @returns void\n\t\t */\n\t\tasync submit() {\n\t\t\t// Bail if form not valid.\n\t\t\tif( ! this.valid ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.isLoading = true;\n\n\t\t\t// Post list of links and links to delete.\n\t\t\tconst response = await AFFWP.portal.core.fetch( {\n\t\t\t\tpath: 'affwp/v2/portal/integrations/direct-link-tracking/save-links',\n\t\t\t\tmethod: 'POST',\n\t\t\t\tdata: {\n\t\t\t\t\tlinks: this.links,\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\tthis.showInvalidSubmission = !response.success;\n\t\t\tthis.links = response.links;\n\t\t\tthis.rejected = response.rejected.join('<br>');\n\t\t\tthis.showUpdateNotice = true;\n\t\t\tthis.isLoading = false;\n\t\t},\n\n\t\t/**\n\t\t * Dismiss notice.\n\t\t *\n\t\t * Calls the REST API to dismiss the notice and get the new list of links and notices.\n\t\t *\n\t\t * @since  1.0.0\n\t\t * @access public\n\t\t *\n\t\t * @param url_id {int} URL ID.\n\t\t * @returns void\n\t\t */\n\t\tasync dismiss( url_id ) {\n\t\t\t// trigger dismiss only once at a time.\n\t\t\tif( this.isDismissingNotice ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.isDismissingNotice = true;\n\t\t\tthis.isLoading = true;\n\n\t\t\t// Call REST API to dismiss the notice for this url id.\n\t\t\tawait AFFWP.portal.core.fetch( {\n\t\t\t\tpath: 'affwp/v2/portal/integrations/direct-link-tracking/dismiss-notice',\n\t\t\t\tmethod: 'POST',\n\t\t\t\tdata: {\n\t\t\t\t\turl_id,\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\t// reload data.\n\t\t\tthis.init();\n\t\t},\n\n\t\t/**\n\t\t * Has Error.\n\t\t *\n\t\t * Determines if the specified error is set for a certain link.\n\t\t *\n\t\t * @since  1.0.0\n\t\t * @access public\n\t\t *\n\t\t * @param link {linkObject} Link object.\n\t\t * @param error {string} Type of error.\n\t\t * @returns {boolean} True if the error is true. Otherwise false.\n\t\t */\n\t\thasError( link, error ) {\n\t\t\treturn link.errors && true === link.errors[error];\n\t\t},\n\n\t\t/**\n\t\t * Has Errors.\n\t\t *\n\t\t * Determines if the link has any errors.\n\t\t *\n\t\t * @since  1.0.0\n\t\t * @access public\n\t\t *\n\t\t * @param link {linkObject} Link object.\n\t\t * @returns {boolean} True if the error is true. Otherwise false.\n\t\t */\n\t\thasErrors( link ) {\n\t\t\treturn link.errors && Object.keys( link.errors ).length > 0;\n\t\t},\n\n\t\t/**\n\t\t * Checks if valid.\n\t\t *\n\t\t * Determines if there are errors on any of the links.\n\t\t *\n\t\t * @since  1.0.0\n\t\t * @access public\n\t\t *\n\t\t * @returns {boolean} True if the error is true. Otherwise false.\n\t\t */\n\t\tcheckValid() {\n\t\t\tlet valid = true;\n\t\t\tconst linkInvalid = this.links.find( link => link.errors && Object.keys( link.errors ).length > 0 );\n\t\t\tif( linkInvalid ) {\n\t\t\t\tvalid = false;\n\t\t\t}\n\n\t\t\tthis.valid = valid;\n\t\t},\n\n\t\t/**\n\t\t * Validates links on the frontend.\n\t\t *\n\t\t * Determines if a link is valid just using client-side validations.\n\t\t *\n\t\t * @since  1.0.0\n\t\t * @access public\n\t\t *\n\t\t * @param linkIndex {int} Index of link on links array.\n\t\t * @returns void\n\t\t */\n\t\tvalidateFrontend( linkIndex ) {\n\t\t\tconst currentLink = this.getLinkObject( linkIndex );\n\n\t\t\t// Bail if link not found.\n\t\t\tif( false === currentLink ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst url = currentLink.url;\n\n\t\t\t// Clear backend validation timeout, url has changed.\n\t\t\tclearTimeout( currentLink.timer );\n\n\t\t\t// Reset errors.\n\t\t\tlet foundErrors = false;\n\t\t\tcurrentLink.errors = [];\n\n\t\t\t// Check if empty.\n\t\t\tif( '' === url.trim() ) {\n\t\t\t\tcurrentLink.errors.empty = true;\n\t\t\t\tfoundErrors = true;\n\t\t\t} else {\n\t\t\t\t// Check if duplicated.\n\t\t\t\tconst duplicated = this.links.find( ( link, index ) => index !== linkIndex && link.url === url );\n\t\t\t\tif( duplicated ) {\n\t\t\t\t\tcurrentLink.errors.duplicated = true;\n\t\t\t\t\tfoundErrors = true;\n\t\t\t\t}\n\n\t\t\t\t// Check if valid url (simple url validation).\n\t\t\t\tif( ! validateUrl( url ) ) {\n\t\t\t\t\tcurrentLink.errors.invalid = true;\n\t\t\t\t\tfoundErrors = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif( foundErrors ) {\n\t\t\t\tthis.checkValid();\n\t\t\t} else {\n\t\t\t\t// No client-side errors, let's check on backend with add-on validation.\n\t\t\t\tthis.valid = false;\n\t\t\t\t// Wait 500ms before submitting the url.\n\t\t\t\tcurrentLink.timer = setTimeout( this.validateBackend.bind(this, linkIndex), 500 );\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Validates links on the backend.\n\t\t *\n\t\t * Determines if a link is valid just using client-side validations.\n\t\t *\n\t\t * @since  1.0.0\n\t\t * @access public\n\t\t *\n\t\t * @param linkIndex {int} Index of link on links array.\n\t\t * @returns void\n\t\t */\n\t\tasync validateBackend( linkIndex ) {\n\t\t\tconst currentLink = this.getLinkObject( linkIndex );\n\n\t\t\t// Bail if link not found.\n\t\t\tif( false === currentLink ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst url = currentLink.url;\n\n\t\t\tcurrentLink.isValidatingUrl = true;\n\t\t\tconst response = await AFFWP.portal.core.fetch( {\n\t\t\t\tpath: 'affwp/v2/portal/integrations/direct-link-tracking/validate',\n\t\t\t\tmethod: 'POST',\n\t\t\t\tdata: {\n\t\t\t\t\turl\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\tcurrentLink.isValidatingUrl = false;\n\n\t\t\t// url has changed, ignore this validation.\n\t\t\tif( url !== currentLink.url ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif( ! response.success ) {\n\t\t\t\tcurrentLink.errors.addon = true;\n\t\t\t\tcurrentLink.errors.addonReason = response.error;\n\t\t\t}\n\t\t\tthis.checkValid();\n\t\t}\n\t}\n}\n\nexport default settings;\n"],"names":["pause","length","Promise","resolve","setTimeout","trailingslashit","input","endsWith","getAuthority","getFragment","getPath","getProtocol","getQueryString","addQueryArgs","paginationRegex","appendUrl","url","append","startsWith","substr","constructUrl","parts","urlObject","getQuerystring","queryString","reduce","acc","part","isValidUrlPart","includes","toLowerCase","callback","charAt","toUpperCase","slice","urlPart","undefined","authoritiesMatch","baseAuthority","inputAuthority","regex","RegExp","test","hasValidProtocol","protocol","getPage","path","search","match","paginateUrl","args","replace","urlParts","page","push","result","validateUrl","getStablePath","splitted","split","query","base","map","entry","sort","a","b","localeCompare","pair","join","settings","isLoading","valid","links","maxLinks","rejected","showingSuccessMessage","showUpdateNotice","showInvalidSubmission","isDismissingNotice","init","response","AFFWP","portal","core","fetch","cacheResult","link","timer","isValidatingUrl","isRemoving","addDomain","checkValid","url_id","errors","getLinkObject","index","getLinkParam","param","object","removeLink","linkIndex","linkToDelete","urlId","method","data","splice","submit","success","dismiss","hasError","error","hasErrors","Object","keys","linkInvalid","find","validateFrontend","currentLink","clearTimeout","foundErrors","trim","empty","duplicated","invalid","validateBackend","bind","addon","addonReason"],"sourceRoot":""}